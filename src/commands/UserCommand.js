const PixelCommand = require('../structures/PixelCommand');
const { EmbedBuilder } = require('discord.js');

function buildRole(id, permissions) {
    if(permissions.special.includes(id)) return '—Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è';
    else if(permissions.admin.includes(id)) return '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä';
    else if(permissions.moderator.includes(id)) return '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä';
    else return '–∏–≥—Ä–æ–∫';
}

class UserCommand extends PixelCommand {
    constructor() {
        super('user', {
            cooldown: 3,
            aliases: ['player', 'info', 'u'],
        });
    }

    async run(message, args) {
        const member = message.mentions.members.first() || message.guild.members.cache.get(args[0]) || message.member;
        const msg = await message.reply({ content: '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –æ –∏–≥—Ä–æ–∫–µ...' });

        const information = await message.client.database.collection('users')
            .findOne({ userID: member.id }, { projection: { _id: 0, token: 1, tag: 1, points: 1, badges: 1, banned: 1 } });

        return msg.edit({
            content: null,
            embeds: [
                new EmbedBuilder()
                .setTitle((member.id === message.author.id) ? '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å' : `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ ${member.nickname || member.user.username}`)
                .setColor(0x5865F2)
                .addFields([
                    { 
                        name: 'üìå –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                        value: 
                            `> ID —É—á–∞—Å—Ç–Ω–∏–∫–∞: \`${member.id}\`\n` +
                            `> –¢–µ–≥ —É—á–∞—Å—Ç–Ω–∏–∫–∞: \`${member.user.tag}\`\n` +
                            `> –ù–∏–∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞: \`${member.nickname || '–æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç'}\`\n` +
                            `> –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: <t:${Math.ceil(member.user.createdTimestamp / 1000)}>\n` +
                            `> –î–∞—Ç–∞ –∑–∞—Ö–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä: <t:${Math.ceil(member.joinedTimestamp / 1000)}>`
                    },
                    {
                        name: 'üõ†Ô∏è –í–Ω—É—Ç—Ä–µ–Ω—è—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                        value: 
                            `> –ü–µ—Ä–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: ${!information?.token ? '**–Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–ª–∞—Å—å**' : `<t:${Math.ceil(parseInt(information.token.split('.')[2], 36) / 1000)}>`}\n` +
                            `> –ó–Ω–∞—á–∫–∏: ${message.client.functions.buildBadges(information?.badges ?? []) ?? '**–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç**'}\n` +
                            `> –¢–µ–≥: **${information?.tag || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}**\n` +
                            `> –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: ${information.banned ? `‚úÖ (–¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: <t:${Math.floor(information.banned.timeout / 1000)}>)` : '‚ùå'}\n` +
                            `> –†–æ–ª—å: \`${buildRole(member.id, message.client.permissions)}\`\n` +
                            `> –ë–∞–ª–ª—ã: **${information?.points || 0}**`
                    }
                ])
                .setThumbnail(member.user.displayAvatarURL())
            ]
        });
    }
}

module.exports = UserCommand;